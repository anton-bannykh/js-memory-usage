"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function Map(t,e,r,n,i){this._editable=t,this._edit=e,this._config=r,this._root=n,this._size=i}function MapIterator(t){this.v=t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.hamt=void 0;var _iterator=require("babel-runtime/core-js/symbol/iterator"),_iterator2=_interopRequireDefault(_iterator),_typeof3=require("babel-runtime/helpers/typeof"),_typeof4=_interopRequireDefault(_typeof3),_symbol=require("babel-runtime/core-js/symbol"),_symbol2=_interopRequireDefault(_symbol),_typeof="function"==typeof _symbol2.default&&"symbol"===(0,_typeof4.default)(_iterator2.default)?function(t){return void 0===t?"undefined":(0,_typeof4.default)(t)}:function(t){return t&&"function"==typeof _symbol2.default&&t.constructor===_symbol2.default&&t!==_symbol2.default.prototype?"symbol":void 0===t?"undefined":(0,_typeof4.default)(t)},hamt={},SIZE=5,BUCKET_SIZE=Math.pow(2,SIZE),MASK=BUCKET_SIZE-1,MAX_INDEX_NODE=BUCKET_SIZE/2,MIN_ARRAY_NODE=BUCKET_SIZE/4,nothing={},constant=function(t){return function(){return t}},hash=hamt.hash=function(t){var e=void 0===t?"undefined":_typeof(t);if("number"===e)return t;"string"!==e&&(t+="");for(var r=0,n=0,i=t.length;n<i;++n)r=(r<<5)-r+t.charCodeAt(n)|0;return r},popcount=function(t){return t-=t>>1&1431655765,t=(858993459&t)+(t>>2&858993459),t=t+(t>>4)&252645135,t+=t>>8,127&(t+=t>>16)},hashFragment=function(t,e){return e>>>t&MASK},toBitmap=function(t){return 1<<t},fromBitmap=function(t,e){return popcount(t&e-1)},arrayUpdate=function(t,e,r,n){var i=n;if(!t){var a=n.length;i=new Array(a);for(var o=0;o<a;++o)i[o]=n[o]}return i[e]=r,i},arraySpliceOut=function(t,e,r){var n=r.length-1,i=0,a=0,o=r;if(t)i=a=e;else for(o=new Array(n);i<e;)o[a++]=r[i++];for(++i;i<=n;)o[a++]=r[i++];return t&&(o.length=n),o},arraySpliceIn=function(t,e,r,n){var i=n.length;if(t){for(var a=i;a>=e;)n[a--]=n[a];return n[e]=r,n}for(var o=0,u=0,s=new Array(i+1);o<e;)s[u++]=n[o++];for(s[e]=r;o<i;)s[++u]=n[o++];return s},LEAF=1,COLLISION=2,INDEX=3,ARRAY=4,empty={__hamt_isEmpty:!0},isEmptyNode=function(t){return t===empty||t&&t.__hamt_isEmpty},Leaf=function(t,e,r,n){return{type:LEAF,edit:t,hash:e,key:r,value:n,_modify:Leaf__modify}},Collision=function(t,e,r){return{type:COLLISION,edit:t,hash:e,children:r,_modify:Collision__modify}},IndexedNode=function(t,e,r){return{type:INDEX,edit:t,mask:e,children:r,_modify:IndexedNode__modify}},ArrayNode=function(t,e,r){return{type:ARRAY,edit:t,size:e,children:r,_modify:ArrayNode__modify}},isLeaf=function(t){return t===empty||t.type===LEAF||t.type===COLLISION},expand=function(t,e,r,n,i){for(var a=[],o=n,u=0,s=0;o;++s)1&o&&(a[s]=i[u++]),o>>>=1;return a[e]=r,ArrayNode(t,u+1,a)},pack=function(t,e,r,n){for(var i=new Array(e-1),a=0,o=0,u=0,s=n.length;u<s;++u)if(u!==r){var h=n[u];h&&!isEmptyNode(h)&&(i[a++]=h,o|=1<<u)}return IndexedNode(t,o,i)},mergeLeaves=function t(e,r,n,i,a,o){if(n===a)return Collision(e,n,[o,i]);var u=hashFragment(r,n),s=hashFragment(r,a);return IndexedNode(e,toBitmap(u)|toBitmap(s),u===s?[t(e,r+SIZE,n,i,a,o)]:u<s?[i,o]:[o,i])},updateCollisionList=function(t,e,r,n,i,a,o,u){for(var s=i.length,h=0;h<s;++h){var f=i[h];if(r(o,f.key)){var p=f.value,y=a(p);return y===p?i:y===nothing?(--u.value,arraySpliceOut(t,h,i)):arrayUpdate(t,h,Leaf(e,n,o,y),i)}}var d=a();return d===nothing?i:(++u.value,arrayUpdate(t,s,Leaf(e,n,o,d),i))},canEditNode=function(t,e){return t===e.edit},Leaf__modify=function(t,e,r,n,i,a,o){if(e(a,this.key)){var u=n(this.value);return u===this.value?this:u===nothing?(--o.value,empty):canEditNode(t,this)?(this.value=u,this):Leaf(t,i,a,u)}var s=n();return s===nothing?this:(++o.value,mergeLeaves(t,r,this.hash,this,i,Leaf(t,i,a,s)))},Collision__modify=function(t,e,r,n,i,a,o){if(i===this.hash){var u=canEditNode(t,this),s=updateCollisionList(u,t,e,this.hash,this.children,n,a,o);return s===this.children?this:s.length>1?Collision(t,this.hash,s):s[0]}var h=n();return h===nothing?this:(++o.value,mergeLeaves(t,r,this.hash,this,i,Leaf(t,i,a,h)))},IndexedNode__modify=function(t,e,r,n,i,a,o){var u=this.mask,s=this.children,h=hashFragment(r,i),f=toBitmap(h),p=fromBitmap(u,f),y=u&f,d=y?s[p]:empty,c=d._modify(t,e,r+SIZE,n,i,a,o);if(d===c)return this;var l=canEditNode(t,this),m=u,v=void 0;if(y&&isEmptyNode(c)){if(!(m&=~f))return empty;if(s.length<=2&&isLeaf(s[1^p]))return s[1^p];v=arraySpliceOut(l,p,s)}else if(y||isEmptyNode(c))v=arrayUpdate(l,p,c,s);else{if(s.length>=MAX_INDEX_NODE)return expand(t,h,c,u,s);m|=f,v=arraySpliceIn(l,p,c,s)}return l?(this.mask=m,this.children=v,this):IndexedNode(t,m,v)},ArrayNode__modify=function(t,e,r,n,i,a,o){var u=this.size,s=this.children,h=hashFragment(r,i),f=s[h],p=(f||empty)._modify(t,e,r+SIZE,n,i,a,o);if(f===p)return this;var y=canEditNode(t,this),d=void 0;if(isEmptyNode(f)&&!isEmptyNode(p))++u,d=arrayUpdate(y,h,p,s);else if(!isEmptyNode(f)&&isEmptyNode(p)){if(--u<=MIN_ARRAY_NODE)return pack(t,u,h,s);d=arrayUpdate(y,h,empty,s)}else d=arrayUpdate(y,h,p,s);return y?(this.size=u,this.children=d,this):ArrayNode(t,u,d)};empty._modify=function(t,e,r,n,i,a,o){var u=n();return u===nothing?empty:(++o.value,Leaf(t,i,a,u))},Map.prototype.setTree=function(t,e){return this._editable?(this._root=t,this._size=e,this):t===this._root?this:new Map(this._editable,this._edit,this._config,t,e)};var tryGetHash=hamt.tryGetHash=function(t,e,r,n){for(var i=n._root,a=0,o=n._config.keyEq;;)switch(i.type){case LEAF:return o(r,i.key)?i.value:t;case COLLISION:if(e===i.hash)for(var u=i.children,s=0,h=u.length;s<h;++s){var f=u[s];if(o(r,f.key))return f.value}return t;case INDEX:var p=hashFragment(a,e),y=toBitmap(p);if(i.mask&y){i=i.children[fromBitmap(i.mask,y)],a+=SIZE;break}return t;case ARRAY:if(i=i.children[hashFragment(a,e)]){a+=SIZE;break}return t;default:return t}};Map.prototype.tryGetHash=function(t,e,r){return tryGetHash(t,e,r,this)};var tryGet=hamt.tryGet=function(t,e,r){return tryGetHash(t,r._config.hash(e),e,r)};Map.prototype.tryGet=function(t,e){return tryGet(t,e,this)};var getHash=hamt.getHash=function(t,e,r){return tryGetHash(void 0,t,e,r)};Map.prototype.getHash=function(t,e){return getHash(t,e,this)};var get=hamt.get=function(t,e){return tryGetHash(void 0,e._config.hash(t),t,e)};Map.prototype.get=function(t,e){return tryGet(e,t,this)};var hasHash=hamt.has=function(t,e,r){return tryGetHash(nothing,t,e,r)!==nothing};Map.prototype.hasHash=function(t,e){return hasHash(t,e,this)};var has=hamt.has=function(t,e){return hasHash(e._config.hash(t),t,e)};Map.prototype.has=function(t){return has(t,this)};var defKeyCompare=function(t,e){return t===e};hamt.make=function(t){return new Map(0,0,{keyEq:t&&t.keyEq||defKeyCompare,hash:t&&t.hash||hash},empty,0)},hamt.empty=hamt.make();var isEmpty=hamt.isEmpty=function(t){return t&&!!isEmptyNode(t._root)};Map.prototype.isEmpty=function(){return isEmpty(this)};var modifyHash=hamt.modifyHash=function(t,e,r,n){var i={value:n._size},a=n._root._modify(n._editable?n._edit:NaN,n._config.keyEq,0,t,e,r,i);return n.setTree(a,i.value)};Map.prototype.modifyHash=function(t,e,r){return modifyHash(r,t,e,this)};var modify=hamt.modify=function(t,e,r){return modifyHash(t,r._config.hash(e),e,r)};Map.prototype.modify=function(t,e){return modify(e,t,this)};var setHash=hamt.setHash=function(t,e,r,n){return modifyHash(constant(r),t,e,n)};Map.prototype.setHash=function(t,e,r){return setHash(t,e,r,this)};var set=hamt.set=function(t,e,r){return setHash(r._config.hash(t),t,e,r)};Map.prototype.set=function(t,e){return set(t,e,this)};var del=constant(nothing),removeHash=hamt.removeHash=function(t,e,r){return modifyHash(del,t,e,r)};Map.prototype.removeHash=Map.prototype.deleteHash=function(t,e){return removeHash(t,e,this)};var remove=hamt.remove=function(t,e){return removeHash(e._config.hash(t),t,e)};Map.prototype.remove=Map.prototype.delete=function(t){return remove(t,this)};var beginMutation=hamt.beginMutation=function(t){return new Map(t._editable+1,t._edit+1,t._config,t._root,t._size)};Map.prototype.beginMutation=function(){return beginMutation(this)};var endMutation=hamt.endMutation=function(t){return t._editable=t._editable&&t._editable-1,t};Map.prototype.endMutation=function(){return endMutation(this)};var mutate=hamt.mutate=function(t,e){var r=beginMutation(e);return t(r),endMutation(r)};Map.prototype.mutate=function(t){return mutate(t,this)};var appk=function(t){return t&&lazyVisitChildren(t[0],t[1],t[2],t[3],t[4])},lazyVisitChildren=function(t,e,r,n,i){for(;r<t;){var a=e[r++];if(a&&!isEmptyNode(a))return lazyVisit(a,n,[t,e,r,n,i])}return appk(i)},lazyVisit=function(t,e,r){switch(t.type){case LEAF:return{value:e(t),rest:r};case COLLISION:case ARRAY:case INDEX:var n=t.children;return lazyVisitChildren(n.length,n,0,e,r);default:return appk(r)}},DONE={done:!0};MapIterator.prototype.next=function(){if(!this.v)return DONE;var t=this.v;return this.v=appk(t.rest),t},MapIterator.prototype[_iterator2.default]=function(){return this};var visit=function(t,e){return new MapIterator(lazyVisit(t._root,e))},buildPairs=function(t){return[t.key,t.value]},entries=hamt.entries=function(t){return visit(t,buildPairs)};Map.prototype.entries=Map.prototype[_iterator2.default]=function(){return entries(this)};var buildKeys=function(t){return t.key},keys=hamt.keys=function(t){return visit(t,buildKeys)};Map.prototype.keys=function(){return keys(this)};var buildValues=function(t){return t.value},values=hamt.values=Map.prototype.values=function(t){return visit(t,buildValues)};Map.prototype.values=function(){return values(this)};var fold=hamt.fold=function(t,e,r){var n=r._root;if(n.type===LEAF)return t(e,n.value,n.key);for(var i=[n.children],a=void 0;a=i.pop();)for(var o=0,u=a.length;o<u;){var s=a[o++];s&&s.type&&(s.type===LEAF?e=t(e,s.value,s.key):i.push(s.children))}return e};Map.prototype.fold=function(t,e){return fold(t,e,this)};var forEach=hamt.forEach=function(t,e){return fold(function(r,n,i){return t(n,i,e)},null,e)};Map.prototype.forEach=function(t){return forEach(t,this)};var count=hamt.count=function(t){return t._size};Map.prototype.count=function(){return count(this)},Object.defineProperty(Map.prototype,"size",{get:Map.prototype.count}),exports.hamt=hamt;